/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#import "MapTile_proxy.h"
#import "RasterTileBitmap_proxy.h"
#import "RasterTileDataSource_proxy.h"

/**
 * A raster tile data source that loads tiles from another raster tile data source<br>
 * and caches them in an offline sqlite database. Tiles will remain in the database<br>
 * even after the application is closed.<br>
 * The database contains table "persistent_cache" with the following fields:<br>
 * "tileId" (tile id), "compressed" (compressed tile image),<br>
 * "time" (the time the tile was cached in milliseconds from epoch).
 */
@interface NTPersistentCacheRasterTileDataSource : NTRasterTileDataSource
-(void*)getCptr;
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;
/**
 * Constructs a PersistentCacheRasterTileDataSource object from raster tile data source<br>
 * and a sqlite database. The sqlite database must be writable, if it doesn't exist, an empty one<br>
 * will be created instead.<br>
 * <br>
 * @param databasePath The path to the sqlite database, where the tiles will be cached.
 */
-(id)initWithDataSource: (NTRasterTileDataSource*)dataSource databasePath: (NSString*)databasePath;
-(NTRasterTileBitmap*)loadTile: (NTMapTile*)mapTile;
-(void)notifyTilesChanged: (enum TilesType)tilesType removeTiles: (BOOL)removeTiles;
/**
 * Returns the presistent raster tile cache capacity.<br>
 * @return The persistent raster tile cache capacity in bytes.
 */
-(unsigned int)getCapacity;
/**
 * Sets the persistent tile cache capacity. Tiles from this cache can't be drawn directly to the screen, <br>
 * they must first be read from the disk and decompressed which may cause a small delay before they can be seen.<br>
 * The default is 50MB.<br>
 * @return The new persistent raster tile cache capacity in bytes.
 */
-(void)setCapacity: (unsigned int)capacity;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

