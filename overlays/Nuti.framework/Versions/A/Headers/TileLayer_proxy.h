/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#import "Layer_proxy.h"
#import "TileDatasource_proxy.h"

/**
 * An abstract base class for all tile layers.
 */
@interface NTTileLayer : NTLayer
-(void*)getCptr;
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;
/**
 * Returns the data source assigned to this layer.<br>
 * @return The tile data source assigned to this layer.
 */
-(NTTileDataSource*)getDataSource;
/**
 * Returns the state of the preloading flag of this layer.<br>
 * @return True if preloading is enabled.
 */
-(BOOL)isPreloading;
/**
 * Sets the state of preloading for this layer. Preloading allows the downloading of tiles that are not<br>
 * currently visible on screen, but are adjacent to ones that are. This means that the user can pan the map without<br>
 * immediately noticing any missing tiles.<br>
 * <br>
 * Enabling this option might introduce a small performance hit on slower devices. It should also be noted that this<br>
 * will considerably increase network traffic if used with online maps. The default is false.<br>
 * 
 */
-(void)setPreloading: (BOOL)preloading;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

